    int l=1,r=1e9;
    while(l<r)
    {
        int midl=l+(r-l)/3;
        int midr=r-(r-l)/3;
        if(check(midl)<check(midr))//下凸函数，极小值点
            r=midr-1;
        else
            l=midl+1;
    }

int SanFen(int l,int r) //找凹点  
{  
    while(l < r-1)  
    {  
        int mid  = (l+r)/2;  
        int mmid = (mid+r)/2;  
        if( f(mid) > f(mmid) )  
            l = mid;  
        else  
            r = mmid;  
    }  
    return f(l) > f(r) ? l : r;  
}  

double three_devide(double low,double up)  
{  
    double m1,m2;  
    while(up-low>=eps)  
    {  
        m1=low+(up-low)/3;  
        m2=up-(up-low)/3;  
        if(f(m1)<=f(m2))  
            up=m2;  
        else  
            low=m1;  
    }  
    return (m1+m2)/2;  
}  

