双向同时搜索的基本思路是从状态图上的起点和终点同时开始进行 BFS或 DFS。

Meet in the middle（双向DFS，折半搜索)
解决n=40左右的暴力搜索题，分为如下2个步骤
①暴力搜索出n/2的结果，
② 遍历([1,n/2]所有搜索结果，并在另一半搜索结果找其补集解。

双向BFS搜索
解决给出起点状态和终点状态的暴力搜索问题。
同时从起点和终点开始搜索，发现搜索的两端相遇了，那么可以认为是获得了可行解。

Alpha-Beta 剪枝（分支限界搜索）

A*搜索 
解决图形平面上有多个节点的路径求出最低通过成本的算法
定义起点s ，终点 t，从起点（初始状态开始的距离函数g(x)，到终点（最终状态）的距离函数 h(x)，h*(x)|1，
以及每个点的估价函数f(x) = g(x) + h(x) 。
A*算法每次从优先队列中取出一个f  最小的元素，然后更新相邻的状态。
如果h <= h* ，则 A*算法能找到最优解。

迭代加深
当BFS空间复杂度不够优秀时，用迭代加深求最优解（每次加深搜索的最大深度dep）