//预处理出n的阶乘，fac[i]表示i的阶乘
LL fac[N+5];
fac[0]=fac[1]=1;
for(int i=2;i<=N;++i)
     fac[i]=fac[i-1]*i%mod;

//快速幂
LL qpow(LL a,LL b)
{
    LL res=1;
    while(b)
    {
        if(b&1)
            res=res*a%mod;
        b/=2;  //b>>=1;!!!
        a=a*a%mod;
    }
    return res;
}

//求逆元
LL inv(LL a)//剩余定理求逆元
{
    return qpow(a,mod-2);
}

//求组合数
LL C(LL n, LL m)
{
    if(m>n)
        return 0;
    return ( fac[n]*inv(fac[m])%mod )*inv( fac[n-m] )%mod;
}

//@球同，盒同，可空
for(int i=0;i<=n;++i) dp[i][1]=1;
for(int i=0;i<=k;++i) dp[1][k]=dp[0][k]=1;
for(int i=0;i<=n;++i)
{
    for(int j=0;j<=k;++j)
    {
        if(i>=j) dp[i][j]=dp[i][j-1]+dp[i-j][j];
        else dp[i][j]=dp[i][j-1];
    }
}

//@球同，盒同，非空（整数拆分不包含0，非递减序）
n-=k;//然后就相当于n-k个球k个盒子可空
for(int i=0;i<=n;++i) dp[i][1]=1;
for(int i=0;i<=k;++i) dp[1][k]=dp[0][k]=1;
for(int i=0;i<=n;++i)
{
    for(int j=0;j<=k;++j)
    {
        if(i>=j) dp[i][j]=dp[i][j-1]+dp[i-j][j];
        else dp[i][j]=dp[i][j-1];
    }
}

//@球不同，盒同，非空（第二类卡特兰数）
for(int i=1;i<=k;++i) dp[i][i]=1;
for(int i=1;i<=n;++i) dp[i][0]=0;
for(int i=1;i<=n;++i)
{
    for(int j=1;j<=k;++j)
     {
        if(i>j)
            dp[i][j]=j*dp[i-1][j]+dp[i-1][j-1];
        else if(i<j)
            dp[i][j]=0;
    }
}

//@球不同，盒同，可空
//等于上种情况从dp[n][1]+dp[n][2]+..dp[n][k]
for(int i=1;i<=k;++i) dp[i][i]=1;
for(int i=1;i<=n;++i) dp[i][0]=0;
for(int i=1;i<=n;++i)
{
    for(int j=1;j<=k;++j)
     {
        if(i>j)
            dp[i][j]=j*dp[i-1][j]+dp[i-1][j-1];
        else if(i<j)
            dp[i][j]=0;
    }
}
int ans=0;
for(int i=1;i<=k;++i) ans=(ans+dp[n][i]);

//@求同，盒不同，非空, 插板法，
int ans=C	(n-1,k-1);

//@球同，盒不同，可空，插板法
int ans=C(n+k-1,k-1);

//@球不同，盒不同，可空
int ans=qpow(k,n);

//@球不同，盒不同，非空
for(int i=1;i<=k;++i) dp[i][i]=1;
for(int i=1;i<=n;++i) dp[i][0]=0;
for(int i=1;i<=n;++i)
{
    for(int j=1;j<=k;++j)
     {
        if(i>j){
            dp[i][j]=j*dp[i-1][j]+dp[i-1][j-1];
        }
        else if(i<j)
            dp[i][j]=0;
    }
}
int ans=dp[n][k]*fac[k];

卡特兰数：有两种操作，分别为操作1和操作2，它们操作此时相同都为N,且在进行第K次操作二前都至少
进行k次操作一，问有多少种情况。
公式：
1/(n+1)C(2n,n);
H(n+1)=(4n+2)/(n+2)H(n)
1.由n个+1和n个-1组成的排列中，满足前缀和>=0的排列有Catalan(N)种。

2.括号化问题。左括号和右括号各有n个时，合法的括号表达式的个数有Catalan(N)种。

3.有n+1个数连乘，乘法顺序有Catalan(N)种,相当于在式子上加括号。

4.n个数按照特定顺序入栈，出栈顺序随意，可以形成的排列的种类有Catalan(N)种。

5.给定N个节点，能构成Catalan(N)种种形状不同的二叉树。

6.n个非叶节点的满二叉树的形态数为Catalan(N)。

7.对于一个n*n的正方形网格，每次只能向右或者向上移动一格，那么从左下角到右上角的不同种类有Catalan(N)种。

8.对于在n位的2进制中，有m个0，其余为1的catalan数为：C（n,m）-C(n,m-1)。

9.对凸n+2边形进行不同的三角形分割（只连接顶点对形成n个三角形）数为Catalan(N)。

10.将有2n个元素的集合中的元素两两分为n个子集，若任意两个子集都不交叉，那么我们称此划分为一个不交叉划分。此时不交叉的划分数是Catalan(N)。

11.n层的阶梯切割为n个矩形的切法数也是Catalan(N)。

12.在一个2*n的格子中填入1到2n这些数值使得每个格子内的数值都比其右边和上边的所有数值都小的情况数也是Catalan(N)。

裴蜀定理 gcd(a,b)=d,则ax+by整除d