#define PII pair<int,int>
vector<PII> G[N+5]; //pair是大到小排序。

//初始化函数，不可少，
void init()
{
    memset(dis,inf,sizeof(dis));
    memset(vis,0,sizeof(vis));
    for(int i=1;i<=N;++i)
        path[i]=i;//自己到自己所需路径最短
}
//输出路径
void print_path(int now)
{
    if(path[now]!=now)
        print_path(path[now]);
    printf(now==te? "%d\n":"%d->",now);
}

//dij函数
void dij()
{
    priority_queue<PII,vector<PII>,greater<PII> >q; 
    q.push({0,0});
    dis[0]=0;
    while(q.size())
    {
        int u=q.top().second;//q中第一维为len,第二维为点
        q.pop();
        if(vis[u]==1)  //TLE
            continue ;
        vis[u]=1; //标记
        for(int i=0;i<G[u].size();++i)
        {
            int v=G[u][i].first;//G第一维为点，第二维为len
            int len=G[u][i].second;
            if(!vis[v]&&dis[v]>dis[u]+len)//当前点最短路没求出!vis[v]，若求出则直接跳过。
            {
                dis[v]=dis[u]+len;
           	q.push({dis[v],v});
                path[v]=u;//更新路径。
            }
        }
}